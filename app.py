from flask import Flask, render_template, request, redirect, url_for, flash, session

app = Flask(__name__)
app.secret_key = "supersecretkey"  # –¥–ª—è —Å–µ—Å—Å–∏–π

# –ü—Ä–æ—Å—Ç–∞—è –±–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∏–º–∏—Ç–∞—Ü–∏—è)
users = {
    "admin@stolovaya.kg": {"name": "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω", "password": "admin123", "role": "Administrator"}
}

# –ü—Ä–∏–º–µ—Ä –∑–∞–∫–∞–∑–æ–≤
orders_list = [
    {"id": 1, "dish": "–ü–∏—Ü—Ü–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "status": "–ê–∫—Ç–∏–≤–µ–Ω"},
    {"id": 2, "dish": "–°—É—à–∏ —Å–µ—Ç –°–∞–º—É—Ä–∞–π", "status": "–ê–∫—Ç–∏–≤–µ–Ω"},
    {"id": 3, "dish": "–ë—É—Ä–≥–µ—Ä –ß–µ–¥–¥–µ—Ä", "status": "–î–æ—Å—Ç–∞–≤–ª–µ–Ω"},
]

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –≤—Ö–æ–¥)
@app.route("/", methods=["GET", "POST"])
def index():
    if request.method == "POST":
        action = request.form.get("action")
        email = request.form.get("email")
        password = request.form.get("password")
        name = request.form.get("name")

        if action == "register":
            if email in users:
                flash("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!", "error")
            else:
                users[email] = {"name": name, "password": password, "role": "Customer"}
                flash("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ.", "success")

        elif action == "login":
            if email in users and users[email]["password"] == password:
                session["user"] = email
                flash("–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω!", "success")
                return redirect(url_for("dashboard"))
            else:
                flash("–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å!", "error")

    return render_template("index.html")

# –ü–∞–Ω–µ–ª—å –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞
@app.route("/dashboard")
def dashboard():
    if "user" not in session:
        return redirect(url_for("index"))

    email = session["user"]
    user = users[email]
    name = user["name"]
    role = user["role"]

    # –ú–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    if role == "Administrator":
        menu_items = [
            ("–ú–µ–Ω—é –±–ª—é–¥", "menu"),
            ("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é", "manage_menu"),
            ("–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –±–ª—é–¥", "analytics"),
            ("–í—ã—Ö–æ–¥", "logout")
        ]
    else:
        menu_items = [
            ("–ú–µ–Ω—é –±–ª—é–¥", "menu"),
            ("–ö–æ—Ä–∑–∏–Ω–∞", "cart"),
            ("–ú–æ–∏ –∑–∞–∫–∞–∑—ã", "orders_page"),  # <-- –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π endpoint
            ("–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤", "history"),
            ("–í—ã—Ö–æ–¥", "logout")
        ]

    return render_template("dashboard.html", name=name, role=role, menu_items=menu_items)

# –ú–µ–Ω—é –∏ —Ä–∞–∑–¥–µ–ª—ã
@app.route("/menu")
def menu():
    return "<h2>üçΩÔ∏è –ú–µ–Ω—é –±–ª—é–¥</h2>"

@app.route("/cart")
def cart():
    return "<h2>üõí –ö–æ—Ä–∑–∏–Ω–∞</h2>"

@app.route("/orders")
def orders_page():
    if "user" not in session:
        return redirect(url_for("index"))

    active_orders = [o for o in orders_list if o["status"] == "–ê–∫—Ç–∏–≤–µ–Ω"]
    completed_orders = [o for o in orders_list if o["status"] != "–ê–∫—Ç–∏–≤–µ–Ω"]

    return render_template("orders.html", active_orders=active_orders, completed_orders=completed_orders)

@app.route("/history")
def history():
    return "<h2>üìú –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤</h2>"

@app.route("/analytics")
def analytics():
    if "user" not in session or users[session["user"]]["role"] != "Administrator":
        return "<h3>‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω!</h3>"
    return "<h2>üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –±–ª—é–¥</h2>"

# –í—ã—Ö–æ–¥
@app.route("/logout")
def logout():
    session.pop("user", None)
    flash("–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.", "info")
    return redirect(url_for("index"))

# --- –î–æ–±–∞–≤–∏–º –º–µ–Ω—é –±–ª—é–¥ –¥–ª—è –∞–¥–º–∏–Ω–∫–∏ ---
menu_items_list = [
    {"id": 1, "name": "–ü–∏—Ü—Ü–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "price": 450},
    {"id": 2, "name": "–°—É—à–∏ —Å–µ—Ç –°–∞–º—É—Ä–∞–π", "price": 1200},
    {"id": 3, "name": "–ë—É—Ä–≥–µ—Ä –ß–µ–¥–¥–µ—Ä", "price": 350},
]

def get_next_id():
    return max([item['id'] for item in menu_items_list], default=0) + 1

@app.route("/manage_menu", methods=["GET", "POST"])
def manage_menu():
    if "user" not in session or users[session["user"]]["role"] != "Administrator":
        return "<h3>‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω!</h3>"

    if request.method == "POST":
        action = request.form.get("action")
        item_id = request.form.get("id")
        name = request.form.get("name")
        price = request.form.get("price")

        if action == "add":
            menu_items_list.append({"id": get_next_id(), "name": name, "price": float(price)})
            flash(f"–ë–ª—é–¥–æ '{name}' –¥–æ–±–∞–≤–ª–µ–Ω–æ!", "success")
        elif action == "edit":
            for item in menu_items_list:
                if str(item["id"]) == item_id:
                    item["name"] = name
                    item["price"] = float(price)
                    flash(f"–ë–ª—é–¥–æ '{name}' –æ–±–Ω–æ–≤–ª–µ–Ω–æ!", "success")
        elif action == "delete":
            menu_items_list[:] = [item for item in menu_items_list if str(item["id"]) != item_id]
            flash("–ë–ª—é–¥–æ —É–¥–∞–ª–µ–Ω–æ!", "info")

    return render_template("manage_menu.html", menu_items=menu_items_list)

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    app.run(debug=True)
