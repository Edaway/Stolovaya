from flask import Flask, render_template, request, redirect, url_for, flash, session
from flask_login import current_user

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask ---
app = Flask(__name__)
app.secret_key = "supersecretkey"

# --- –ë–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ---
users = {
    "admin@stolovaya.kg": {
        "name": "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω",
        "password": "admin123",
        "role": "Administrator"
    },
    "customer@gmail.com": {
        "name": "–ü–æ–∫—É–ø–∞—Ç–µ–ª—å",
        "password": "123",
        "role": "Customer"
    }
}

# --- –ü—Ä–∏–º–µ—Ä –∑–∞–∫–∞–∑–æ–≤ ---
orders_list = [
    {"id": 1, "dish": "–ü–∏—Ü—Ü–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "status": "–ê–∫—Ç–∏–≤–µ–Ω"},
    {"id": 2, "dish": "–°—É—à–∏ —Å–µ—Ç –°–∞–º—É—Ä–∞–π", "status": "–ê–∫—Ç–∏–≤–µ–Ω"},
    {"id": 3, "dish": "–ë—É—Ä–≥–µ—Ä –ß–µ–¥–¥–µ—Ä", "status": "–î–æ—Å—Ç–∞–≤–ª–µ–Ω"},
]

# --- –ú–µ–Ω—é –±–ª—é–¥ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ (–≤ —Å–æ–º–∞—Ö) ---
menu_items_list = [
    {"id": 1, "name": "–ü–∏—Ü—Ü–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", "price": 450, "category": "–ü–∏—Ü—Ü–∞", "image": "üçï", "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø–∏—Ü—Ü–∞ —Å —Ç–æ–º–∞—Ç–Ω—ã–º —Å–æ—É—Å–æ–º –∏ –º–æ—Ü–∞—Ä–µ–ª–ª–æ–π"},
    {"id": 2, "name": "–°—É—à–∏ —Å–µ—Ç –°–∞–º—É—Ä–∞–π", "price": 1200, "category": "–°—É—à–∏", "image": "üç£", "description": "–ê—Å—Å–æ—Ä—Ç–∏ –∏–∑ —Å–≤–µ–∂–∏—Ö —Å—É—à–∏ –∏ —Ä–æ–ª–ª–æ–≤"},
    {"id": 3, "name": "–ë—É—Ä–≥–µ—Ä –ß–µ–¥–¥–µ—Ä", "price": 350, "category": "–ë—É—Ä–≥–µ—Ä—ã", "image": "üçî", "description": "–°–æ—á–Ω—ã–π –±—É—Ä–≥–µ—Ä —Å —Å—ã—Ä–æ–º —á–µ–¥–¥–µ—Ä –∏ –æ–≤–æ—â–∞–º–∏"},
    {"id": 4, "name": "–ü–∞—Å—Ç–∞ –ö–∞—Ä–±–æ–Ω–∞—Ä–∞", "price": 420, "category": "–ü–∞—Å—Ç–∞", "image": "üçù", "description": "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –ø–∞—Å—Ç–∞ —Å –±–µ–∫–æ–Ω–æ–º –∏ —Å–æ—É—Å–æ–º"},
    {"id": 5, "name": "–°–∞–ª–∞—Ç –¶–µ–∑–∞—Ä—å", "price": 280, "category": "–°–∞–ª–∞—Ç—ã", "image": "ü•ó", "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å–∞–ª–∞—Ç —Å –∫—É—Ä–∏—Ü–µ–π –∏ —Å–æ—É—Å–æ–º —Ü–µ–∑–∞—Ä—å"},
    {"id": 6, "name": "–ö–æ–ª–∞", "price": 120, "category": "–ù–∞–ø–∏—Ç–∫–∏", "image": "ü•§", "description": "–û—Å–≤–µ–∂–∞—é—â–∏–π –≥–∞–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞–ø–∏—Ç–æ–∫"},
]

# --- –•—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö ---
favorites = {}      # –ò–∑–±—Ä–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
carts = {}          # –ö–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
active_orders = []  # –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã
completed_orders = []  # –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã


# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---
def get_next_id():
    return max([item['id'] for item in menu_items_list], default=0) + 1


def get_categories():
    return list(set(item['category'] for item in menu_items_list))


# --- –ì–õ–ê–í–ù–ê–Ø –°–¢–†–ê–ù–ò–¶–ê ---
@app.route("/", methods=["GET", "POST"])
def index():
    if request.method == "POST":
        action = request.form.get("action")
        email = request.form.get("email")
        password = request.form.get("password")
        name = request.form.get("name")

        if action == "register":
            if email in users:
                flash("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!", "error")
            else:
                users[email] = {"name": name, "password": password, "role": "Customer"}
                flash("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ.", "success")
                return redirect(url_for("index"))

        elif action == "login":
            if email in users and users[email]["password"] == password:
                session["user"] = email
                flash("–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω!", "success")

                user_role = users[email]["role"]
                if user_role == "Administrator":
                    return redirect(url_for("admin_dashboard"))
                else:
                    return redirect(url_for("dashboard"))
            else:
                flash("–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å!", "error")

    return render_template("index.html")


# --- –õ–ò–ß–ù–´–ô –ö–ê–ë–ò–ù–ï–¢ ---
@app.route("/dashboard")
def dashboard():
    if "user" not in session:
        flash("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É!", "error")
        return redirect(url_for("index"))

    email = session["user"]
    user = users[email]

    # –ò–∑–±—Ä–∞–Ω–Ω–æ–µ
    user_favorites = favorites.get(email, [])
    favorite_items = [item for item in menu_items_list if item["id"] in user_favorites]

    # –ö–æ—Ä–∑–∏–Ω–∞
    user_cart = carts.get(email, {})
    cart_items = []
    total_price = 0

    for item_id, quantity in user_cart.items():
        for item in menu_items_list:
            if item["id"] == item_id:
                cart_item = item.copy()
                cart_item["quantity"] = quantity
                cart_item["total"] = item["price"] * quantity
                cart_items.append(cart_item)
                total_price += cart_item["total"]
                break

    menu_items = [
        ("–ú–µ–Ω—é –±–ª—é–¥", "menu"),
        ("–ö–æ—Ä–∑–∏–Ω–∞", "cart"),
        ("–ú–æ–∏ –∑–∞–∫–∞–∑—ã", "orders_page"),
        ("–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤", "history"),
        ("–í—ã—Ö–æ–¥", "logout")
    ]

    return render_template(
        "dashboard.html",
        name=user["name"],
        role=user["role"],
        menu_items=menu_items,
        favorite_items=favorite_items,
        cart_items=cart_items,
        total_price=total_price
    )


# --- –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨ ---
@app.route("/admin_dashboard")
def admin_dashboard():
    if "user" not in session:
        return redirect(url_for("index"))

    user = users[session["user"]]
    if user["role"] != "Administrator":
        return redirect(url_for("dashboard"))

    return render_template(
        "admin_dashboard.html",
        name=user["name"],
        menu_items_list=menu_items_list,
        orders_list=orders_list,
        users=users
    )


# --- –ú–ï–ù–Æ –ë–õ–Æ–î ---
@app.route("/menu")
def menu():
    if "user" not in session:
        flash("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É!", "error")
        return redirect(url_for("index"))

    category = request.args.get('category', '')
    search = request.args.get('search', '')

    filtered_items = menu_items_list
    if category:
        filtered_items = [item for item in filtered_items if item['category'] == category]
    if search:
        search_lower = search.lower()
        filtered_items = [
            item for item in filtered_items
            if search_lower in item['name'].lower() or search_lower in item['description'].lower()
        ]

    user_favorites = favorites.get(session["user"], [])
    categories = get_categories()

    return render_template(
        "menu.html",
        menu_items=filtered_items,
        categories=categories,
        selected_category=category,
        search_query=search,
        user_favorites=user_favorites
    )


# --- –ò–ó–ë–†–ê–ù–ù–û–ï ---
@app.route("/toggle_favorite/<int:item_id>")
def toggle_favorite(item_id):
    if "user" not in session:
        flash("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É!", "error")
        return redirect(url_for("index"))

    user_email = session["user"]
    if user_email not in favorites:
        favorites[user_email] = []

    if item_id in favorites[user_email]:
        favorites[user_email].remove(item_id)
        flash("–ë–ª—é–¥–æ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ", "info")
    else:
        favorites[user_email].append(item_id)
        flash("–ë–ª—é–¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!", "success")

    return redirect(request.referrer or url_for('menu'))


# --- –ö–û–†–ó–ò–ù–ê ---
@app.route("/cart")
def cart():
    if "user" not in session:
        flash("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É!", "error")
        return redirect(url_for("index"))

    user_email = session["user"]
    user_cart = carts.get(user_email, {})
    cart_items = []
    total_price = 0

    for item_id, quantity in user_cart.items():
        for item in menu_items_list:
            if item["id"] == item_id:
                cart_item = item.copy()
                cart_item["quantity"] = quantity
                cart_item["total"] = item["price"] * quantity
                cart_items.append(cart_item)
                total_price += cart_item["total"]
                break

    return render_template("cart.html", cart_items=cart_items, total_price=total_price)


# --- –î–û–ë–ê–í–õ–ï–ù–ò–ï –í –ö–û–†–ó–ò–ù–£ ---
@app.route("/add_to_cart/<int:item_id>", methods=["GET", "POST"])
def add_to_cart(item_id):
    if "user" not in session:
        flash("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É!", "error")
        return redirect(url_for("index"))

    user_email = session["user"]
    if user_email not in carts:
        carts[user_email] = {}

    if item_id in carts[user_email]:
        carts[user_email][item_id] += 1
    else:
        carts[user_email][item_id] = 1

    item_name = next((item["name"] for item in menu_items_list if item["id"] == item_id), "–ë–ª—é–¥–æ")
    flash(f"'{item_name}' –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É!", "success")

    return redirect(request.referrer or url_for('menu'))

# --- –£–î–ê–õ–ï–ù–ò–ï –ò–ó –ö–û–†–ó–ò–ù–´ ---
@app.route("/remove_from_cart/<int:item_id>")
def remove_from_cart(item_id):
    if "user" not in session:
        flash("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É!", "error")
        return redirect(url_for("index"))

    user_email = session["user"]
    if user_email in carts and item_id in carts[user_email]:
        del carts[user_email][item_id]
        flash("–ë–ª—é–¥–æ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", "info")

    return redirect(url_for('cart'))


# --- –û–ë–ù–û–í–õ–ï–ù–ò–ï –ö–û–õ–ò–ß–ï–°–¢–í–ê –í –ö–û–†–ó–ò–ù–ï ---
@app.route("/update_cart/<int:item_id>", methods=["POST"])
def update_cart(item_id):
    if "user" not in session:
        flash("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É!", "error")
        return redirect(url_for("index"))

    user_email = session["user"]
    quantity = request.form.get("quantity", type=int)

    if user_email in carts and item_id in carts[user_email]:
        if quantity > 0:
            carts[user_email][item_id] = quantity
        else:
            del carts[user_email][item_id]

    return redirect(url_for('cart'))


# --- –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –°–û–ó–î–ê–¢–¨ –ó–ê–ö–ê–ó –ò–ó –ö–û–†–ó–ò–ù–´ ---
def create_order_from_cart(user_email):
    user_cart = carts.get(user_email, {})
    if not user_cart:
        return None

    order = {
        "id": len(active_orders) + len(completed_orders) + 1,
        "user": user_email,
        "items": [],
        "total": 0,
        "status": "–ê–∫—Ç–∏–≤–µ–Ω"
    }

    total_price = 0
    for item_id, quantity in user_cart.items():
        menu_item = next((it for it in menu_items_list if it["id"] == item_id), None)
        if not menu_item:
            continue

        item_total = menu_item["price"] * quantity
        order["items"].append({
            "id": menu_item["id"],
            "name": menu_item["name"],
            "quantity": quantity,
            "price": menu_item["price"],
            "total": item_total
        })
        total_price += item_total

    order["total"] = total_price
    active_orders.append(order)
    carts[user_email] = {}  # –æ—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É

    return order["id"]


# --- –û–§–û–†–ú–õ–ï–ù–ò–ï –ó–ê–ö–ê–ó–ê ---
@app.route('/checkout', methods=['POST'])
def checkout():
    user_email = session.get('user')
    if not user_email:
        flash('–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É!', 'error')
        return redirect(url_for('index'))

    order_id = create_order_from_cart(user_email)
    if order_id is None:
        flash('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!', 'error')
        return redirect(url_for('cart'))

    flash(f'‚úÖ –ó–∞–∫–∞–∑ #{order_id} —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ!', 'success')
    return redirect(url_for('orders_page'))


# --- –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –ó–ê–ö–ê–ó–ê ---
@app.route("/confirm_order", methods=["POST"])
def confirm_order():
    if "user" not in session:
        flash("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É!", "error")
        return redirect(url_for("index"))

    user_email = session["user"]
    user_cart = carts.get(user_email, {})
    if not user_cart:
        flash("–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!", "error")
        return redirect(url_for("cart"))

    order = {
        "id": len(active_orders) + len(completed_orders) + 1,
        "user": user_email,
        "items": [],
        "total": 0,
        "status": "–ê–∫—Ç–∏–≤–µ–Ω"
    }

    total_price = 0
    for item_id, quantity in user_cart.items():
        for item in menu_items_list:
            if item["id"] == item_id:
                order["items"].append({
                    "name": item["name"],
                    "quantity": quantity,
                    "price": item["price"],
                    "total": item["price"] * quantity
                })
                total_price += item["price"] * quantity
                break

    order["total"] = total_price
    active_orders.append(order)
    carts[user_email] = {}
    flash("‚úÖ –ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ!", "success")
    return redirect(url_for("orders_page"))


# --- –ë–´–°–¢–†–ê–Ø –ü–†–û–î–ê–ñ–ê ---
@app.route("/quick_sale", methods=["POST"])
def quick_sale():
    if "user" not in session:
        flash("–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É!", "error")
        return redirect(url_for("index"))

    name = request.form.get("name")
    price = float(request.form.get("price", 0))

    if not name or price <= 0:
        flash("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–¥–∞–∂–∏!", "error")
        return redirect(url_for("menu"))

    order = {
        "id": len(active_orders) + len(completed_orders) + 1,
        "user": session["user"],
        "items": [{"name": name, "quantity": 1, "price": price, "total": price}],
        "total": price,
        "status": "–ê–∫—Ç–∏–≤–µ–Ω"
    }

    active_orders.append(order)
    flash(f"üí∏ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–¥–∞–∂–∞: {name} ({price} —Å–æ–º) –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã!", "success")
    return redirect(url_for("orders_page"))


# --- –í–´–î–ê–ß–ê –ó–ê–ö–ê–ó–ê ---
@app.route("/complete/<int:order_id>")
def complete(order_id):
    for order in active_orders:
        if order["id"] == order_id:
            order["status"] = "–î–æ—Å—Ç–∞–≤–ª–µ–Ω"
            completed_orders.append(order)
            active_orders.remove(order)
            flash(f"üöö –ó–∞–∫–∞–∑ #{order_id} –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π!", "info")
            break

    return redirect(url_for("orders_page"))


# --- –£–ü–†–ê–í–õ–ï–ù–ò–ï –ú–ï–ù–Æ ---
@app.route("/manage_menu", methods=["GET", "POST"])
def manage_menu():
    if "user" not in session or users[session["user"]]["role"] != "Administrator":
        flash("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω!", "error")
        return redirect(url_for("dashboard"))

    if request.method == "POST":
        action = request.form.get("action")
        item_id = request.form.get("id")
        name = request.form.get("name")
        price = request.form.get("price")
        category = request.form.get("category")
        description = request.form.get("description")

        if action == "add":
            new_item = {
                "id": get_next_id(),
                "name": name,
                "price": float(price),
                "category": category,
                "image": "üçΩÔ∏è",
                "description": description
            }
            menu_items_list.append(new_item)
            flash(f"–ë–ª—é–¥–æ '{name}' –¥–æ–±–∞–≤–ª–µ–Ω–æ!", "success")

        elif action == "edit":
            for item in menu_items_list:
                if str(item["id"]) == item_id:
                    item["name"] = name
                    item["price"] = float(price)
                    item["category"] = category
                    item["description"] = description
                    flash(f"–ë–ª—é–¥–æ '{name}' –æ–±–Ω–æ–≤–ª–µ–Ω–æ!", "success")

        elif action == "delete":
            menu_items_list[:] = [item for item in menu_items_list if str(item["id"]) != item_id]
            flash("–ë–ª—é–¥–æ —É–¥–∞–ª–µ–Ω–æ!", "info")

    categories = get_categories()
    return render_template("manage_menu.html", menu_items=menu_items_list, categories=categories)


# --- –°–¢–†–ê–ù–ò–¶–´ –ó–ê–ö–ê–ó–û–í ---
@app.route("/orders")
def orders_page():
    if "user" not in session:
        return redirect(url_for("index"))

    user_email = session["user"]
    current_user_data = users[user_email]

    return render_template(
        "orders.html",
        active_orders=active_orders,
        completed_orders=completed_orders,
        current_user=current_user_data
    )


@app.route("/history")
def history():
    return "<h2>üìú –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤</h2><a href='/dashboard'>–ù–∞–∑–∞–¥</a>"


@app.route("/analytics")
def analytics():
    if "user" not in session or users[session["user"]]["role"] != "Administrator":
        flash("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω!", "error")
        return redirect(url_for("dashboard"))

    return "<h2>üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –±–ª—é–¥</h2><a href='/admin_dashboard'>–ù–∞–∑–∞–¥</a>"


# --- –í–´–•–û–î ---
@app.route("/logout")
def logout():
    session.pop("user", None)
    flash("–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.", "info")
    return redirect(url_for("index"))


# --- –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ---
if __name__ == "__main__":
    print("üöÄ –ò–° –°—Ç–æ–ª–æ–≤–∞—è –ö–ì–¢–£ –∑–∞–ø—É—â–µ–Ω–∞!")
    print("üìç –ê–¥—Ä–µ—Å: http://127.0.0.1:5000")
    app.run(debug=True, port=5000)
